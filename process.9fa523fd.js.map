{"version":3,"sources":["node_modules/symbol-observable/es/ponyfill.js","node_modules/symbol-observable/es/index.js","node_modules/redux/es/redux.js","node_modules/redux-devtools-extension/index.js","process.js"],"names":["symbolObservablePonyfill","root","result","Symbol","observable","self","window","global","module","Function","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","Object","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","type","listeners","i","length","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","warning","message","console","error","e","getUndefinedStateErrorMessage","key","actionType","String","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","call","match","unexpectedKeys","filter","hasOwnProperty","forEach","assertReducerShape","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","isCrushed","CountButtons","document","querySelectorAll","ShowCount","querySelector","startBtn","resultMessage","scoreCom","scoreUser","comShootBtn","userShootBtn2","userShootBtn3","COM_SCORE3","COM_SCORE2","USER_SCORE2","USER_SCORE3","COUNT10","COUNT20","COUNT30","REMAIN_COUNT","SUCCESS_OR_FALSE2","SUCCESS_OR_FALSE3","START","COM","USER","ERROR","SUCCESS2","SUCCESS3","FAIL2","FAIL3","comSCORE3","comSCORE2","userSCORE2","userSCORE3","count10","selectedCount","currentCount","count20","count30","remainCount","start","initialCount","text","turn","com","user","success2","success3","fail2","fail3","comWin","COM_WIN","userWin","USER_WIN","draw","DRAW","successOrfalse2","probability","Number","toFixed","successOrfalse3","initialState","userScore","comScore","selected","resultText","ShootType","newState","assign","compare","textContent","render","classList","add","remove","onclick","style","visibility","event","TARGET","preventDefault"],"mappings":"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","file":"process.9fa523fd.js","sourceRoot":"..","sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","'use strict';\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : function () {\n        if (arguments.length === 0) return undefined;\n        if (typeof arguments[0] === 'object') return compose;\n        return compose.apply(null, arguments);\n      };\n\nexports.devToolsEnhancer =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__\n    : function () {\n        return function (noop) {\n          return noop;\n        };\n      };\n","import {createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst CountButtons =  document.querySelectorAll('#countBtn');\r\nconst ShowCount = document.querySelector('#countShow');\r\nconst startBtn = document.querySelector('#startBtn');\r\nconst message = document.querySelector('#message');\r\nconst resultMessage = document.querySelector('#resultMessage');\r\nconst scoreCom = document.querySelector('.score-com');\r\nconst scoreUser = document.querySelector('.score-user');\r\nconst comShootBtn = document.querySelector('#comShootBtn');\r\nconst userShootBtn2 = document.querySelector('#userShootBtn2');\r\nconst userShootBtn3 = document.querySelector('#userShootBtn3');\r\n\r\n// 액션명 생성\r\nconst COM_SCORE3 = 'com/SCORE3';\r\nconst COM_SCORE2 = 'com/SCORE2';\r\nconst USER_SCORE2 = 'user/SCORE2';\r\nconst USER_SCORE3 = 'user/SCORE3';\r\n\r\nconst COUNT10 = 'count/COUNT10';\r\nconst COUNT20 = 'count/COUNT20';    \r\nconst COUNT30 = 'count/COUNT30';    \r\nconst REMAIN_COUNT = 'count/REMAIN_COUNT';\r\n\r\nconst SUCCESS_OR_FALSE2 = 'success/SUCCESS_OR_FALSE2';\r\nconst SUCCESS_OR_FALSE3 = 'success/SUCCESS_OR_FALSE3';\r\n\r\nconst START = 'message/START';\r\nconst COM = 'message/COM';\r\nconst USER = 'message/USER';\r\nconst ERROR = 'message/ERROR';\r\nconst SUCCESS2 = 'resultMessage/SUCCESS2';\r\nconst SUCCESS3 = 'resultMessage/SUCCESS3';\r\nconst FAIL2 = 'resultMessage/FAIL2';\r\nconst FAIL3 = 'resultMessage/FAIL3';\r\n\r\n// 액션정의함수 생성\r\nexport const comSCORE3 = () => ({\r\n    type : COM_SCORE3\r\n});\r\nexport const comSCORE2 = () => ({\r\n    type : COM_SCORE2\r\n});\r\nexport const userSCORE2 = () => ({\r\n    type : USER_SCORE2\r\n});\r\nexport const userSCORE3 = () => ({\r\n    type : USER_SCORE3\r\n});\r\n\r\nexport const count10 = () => ({type: COUNT10, selectedCount: 10, currentCount: 10});\r\nexport const count20 = () => ({type: COUNT20, selectedCount: 20, currentCount: 20});\r\nexport const count30 = () => ({type: COUNT30, selectedCount: 30, currentCount: 30});\r\nexport const remainCount = () => ({type: REMAIN_COUNT});\r\n\r\nexport const start = (initialCount) => ({\r\n    type: START, \r\n    text:'com 먼저 시작합니다.', \r\n    turn: 'com',\r\n    currentCount: initialCount\r\n});\r\nexport const com = () => ({\r\n    type: COM, \r\n    text: 'com 차례 입니다.',\r\n    turn: 'com'\r\n});\r\nexport const user = () => ({\r\n    type: USER, \r\n    text:'user 님 차례입니다.',\r\n    turn: 'user' \r\n});\r\nexport const error = () => ({\r\n    type: ERROR, \r\n    text:'게임 카운트를 먼저 선택해주세요!'  \r\n});\r\nexport const success2 = (target) => ({\r\n    type: SUCCESS2,\r\n    text: `${target}, 2점슛 성공!!`\r\n});\r\nexport const success3 = (target) => ({\r\n    type: SUCCESS3,\r\n    text: `${target}, 3점슛 성공!!!!`,\r\n});\r\nexport const fail2 = (target) => ({\r\n    type: FAIL2,\r\n    text: `${target},2점슛 실패...`\r\n});\r\nexport const fail3 = (target) => ({\r\n    type: FAIL3,\r\n    text: `${target}, 3점슛 실패...`\r\n});\r\n\r\nexport const comWin = () => ({\r\n    type: COM_WIN,\r\n    text: 'com이 승리하였습니다!',\r\n});\r\n\r\nexport const userWin = () => ({\r\n    type: USER_WIN,\r\n    text: '사용자 님이 승리하였습니다!!'\r\n});\r\n\r\nexport const draw = () => ({\r\n    type: DRAW,\r\n    text: '무승부입니다.'\r\n});\r\n\r\n\r\nexport const successOrfalse2 = () => ({\r\n    type: SUCCESS_OR_FALSE2,\r\n    probability:  Number((Math.random()).toFixed(2))\r\n});\r\n\r\nexport const successOrfalse3 = () => ({\r\n    type: SUCCESS_OR_FALSE3,\r\n    probability:  Number((Math.random()).toFixed(2))\r\n});\r\n\r\n//초기값 생성\r\nconst initialState = {\r\n    userScore : 0,\r\n    comScore : 0,\r\n    selected : false, \r\n    selectedCount: null,\r\n    currentCount: null,\r\n    turn: null,\r\n    resultText: '',\r\n    text: '상단에 카운트를 설정하신 후 Start 버튼을 눌러주세요' ,\r\n    ShootType: 0,\r\n    probability: 0,\r\n};\r\n\r\n//리듀서 함수 생성\r\nfunction reducer(state=initialState, action) {\r\n    let newState;\r\n    switch(action.type) {\r\n        case COM_SCORE2:\r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {comScore: state.comScore + 2})\r\n            ;\r\n            break;\r\n        case COM_SCORE3 :\r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {comScore: state.comScore + 3})\r\n            ;\r\n            break;\r\n        case USER_SCORE2 :\r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {userScore: state.userScore + 2}\r\n            );\r\n            break;\r\n        case USER_SCORE3 :\r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {userScore: state.userScore + 3}\r\n            );\r\n            break;\r\n        case COUNT10:\r\n            newState = Object.assign(\r\n                {}, \r\n                state, \r\n                {selected: true, selectedCount: action.selectedCount, currentCount: action.currentCount}\r\n            );\r\n            break;\r\n        case COUNT20:\r\n            newState = Object.assign(\r\n                {}, \r\n                state, \r\n                {selected: true, selectedCount: action.selectedCount, currentCount: action.currentCount}\r\n            );\r\n            break;\r\n        case COUNT30:\r\n            newState = Object.assign(\r\n                {}, \r\n                state, \r\n                {selected: true, selectedCount: action.selectedCount, currentCount: action.currentCount}\r\n            );\r\n            break;\r\n        case REMAIN_COUNT:\r\n        newState = Object.assign(\r\n            {}, \r\n            state, \r\n            {currentCount: state.currentCount - 1 }\r\n        );\r\n        break;\r\n        case START: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {text: action.text, currentCount: state.selectedCount, turn: action.turn}\r\n            );\r\n            break;\r\n        case COM: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {text: action.text,  turn: action.turn}\r\n            );\r\n            break;\r\n        case USER: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {text: action.text,  turn: action.turn}\r\n            );\r\n            break;\r\n        case ERROR: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {text: action.text}\r\n            );\r\n            break;\r\n        case SUCCESS2: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {resultText: action.text}\r\n            );\r\n            break;\r\n        case SUCCESS3: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {resultText: action.text}\r\n            );\r\n            break;\r\n        case FAIL2: \r\n        // return {...state,text : action.text};\r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {resultText: action.text}\r\n            );\r\n            break;\r\n        case FAIL3: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {resultText: action.text}\r\n            );\r\n            break;\r\n        case SUCCESS_OR_FALSE2: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {probability: action.probability}\r\n            );\r\n            break;\r\n        case SUCCESS_OR_FALSE3: \r\n            newState = Object.assign(\r\n                {},\r\n                state,\r\n                {probability: action.probability}\r\n            );\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return newState;\r\n};\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nconst compare =() => {\r\n    const state = store.getState();\r\n    if (state.comScore > state.userScore){\r\n        message.textContent = 'com 승리!';\r\n    }else if (state.comScore < state.userScore){\r\n        message.textContent = '유저 승리!';\r\n    }else{ \r\n        message.textContent = '무승부';\r\n    };\r\n}\r\n\r\n\r\nconst render = () => {\r\n    const state =store.getState();\r\n    if(state.currentCount > 0){\r\n        ShowCount.textContent = state.currentCount;\r\n        message.textContent = state.text;\r\n        scoreCom.textContent = state.comScore;\r\n        scoreUser.textContent = state.userScore;\r\n        resultMessage.textContent = state.resultText;\r\n        if(state.turn === 'com'){\r\n            userShootBtn2.classList.add('off');\r\n            userShootBtn3.classList.add('off');\r\n            comShootBtn.classList.remove('off');\r\n        }if(state.turn === 'user'){\r\n            comShootBtn.classList.add('off');\r\n            userShootBtn2.classList.remove('off');\r\n            userShootBtn3.classList.remove('off');\r\n        }\r\n    }else if(state.currentCount === 0){\r\n        ShowCount.textContent = state.currentCount;\r\n        message.textContent = state.text;\r\n        userShootBtn2.classList.add('off');\r\n        userShootBtn3.classList.add('off');\r\n        compare();\r\n    }else{\r\n        message.textContent = state.text;\r\n        comShootBtn.classList.add('off');\r\n        userShootBtn2.classList.add('off');\r\n        userShootBtn3.classList.add('off');\r\n    }\r\n};\r\n\r\nrender();\r\nstore.subscribe(render);\r\n\r\nCountButtons[0].onclick = () => {\r\n    resultMessage.style.visibility = \"hidden\";\r\n    store.dispatch(count10());\r\n}\r\nCountButtons[1].onclick = () => {\r\n    resultMessage.style.visibility = \"hidden\";\r\n    store.dispatch(count20());\r\n}\r\nCountButtons[2].onclick = () => {\r\n    resultMessage.style.visibility = \"hidden\";\r\n    store.dispatch(count30());\r\n}\r\n\r\nstartBtn.onclick = () => {\r\n    const state = store.getState();\r\n    const initialCount = state.selectedCount;\r\n    state.selected ? store.dispatch(start(initialCount)) : store.dispatch(error());\r\n};\r\n\r\ncomShootBtn.onclick = (event) => {\r\n    const state =store.getState();\r\n    let TARGET = state.turn;\r\n    if(state.currentCount === 0 || TARGET === 'user'  || TARGET === null){\r\n        event.preventDefault();\r\n    }else{\r\n        resultMessage.style.visibility = \"visible\";\r\n        const Probability = Number((Math.random()).toFixed(2));\r\n        if(Probability <= 0.75){\r\n            store.dispatch(successOrfalse2());\r\n            if(state.probability <= 0.85){\r\n                store.dispatch(success2(TARGET));\r\n                store.dispatch(comSCORE2())\r\n            }else {\r\n                store.dispatch(fail2(TARGET));\r\n            }\r\n                \r\n        }else{\r\n            store.dispatch(successOrfalse3())\r\n            if(state.probability <= 0.45){\r\n                store.dispatch(success3(TARGET));\r\n                store.dispatch(comSCORE3())\r\n            }else {\r\n                store.dispatch(fail3(TARGET));\r\n            }\r\n        }\r\n        store.dispatch(user());\r\n        store.dispatch(remainCount());\r\n    }\r\n};\r\n\r\nuserShootBtn2.onclick = (event) => {\r\n    const state = store.getState();\r\n    let TARGET = state.turn;\r\n    if(state.currentCount === 0 || TARGET === 'com' || TARGET === null){\r\n        event.preventDefault();\r\n    }else{\r\n        resultMessage.style.visibility = \"visible\";\r\n        store.dispatch(successOrfalse2());\r\n        if(state.probability <= 0.85){\r\n            store.dispatch(success2(TARGET));\r\n            store.dispatch(userSCORE2())\r\n        }else {\r\n            store.dispatch(fail2(TARGET));\r\n        }\r\n        store.dispatch(com());\r\n        store.dispatch(remainCount());\r\n    }\r\n};\r\n\r\nuserShootBtn3.onclick = (event) => {\r\n    const state = store.getState();\r\n    let TARGET = state.turn;\r\n    if(state.currentCount === 0 || TARGET === 'com' || TARGET === null){\r\n        event.preventDefault();\r\n    }else{\r\n        resultMessage.style.visibility = \"visible\";\r\n        store.dispatch(successOrfalse3())\r\n        if(state.probability <= 0.45){\r\n            store.dispatch(success3(TARGET));\r\n            store.dispatch(userSCORE3())\r\n        }else {\r\n            store.dispatch(fail3(TARGET));\r\n        }\r\n        store.dispatch(com());\r\n        store.dispatch(remainCount());\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default store;\r\n"]}